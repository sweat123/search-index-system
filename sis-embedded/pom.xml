<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>search-index-system</artifactId>
        <groupId>com.laomei.connect</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sis-embedded</artifactId>

    <properties>
        <skipIT>true</skipIT>
        <skipMysqlSetup>true</skipMysqlSetup>
        <db.schema>sis</db.schema>
        <test-database.user>sis-user</test-database.user>
        <test-database.password>sis-password</test-database.password>
        <test-database.port>13306</test-database.port>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.laomei.connect</groupId>
            <artifactId>sis-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipIT}</skip>
                    <logDate>default</logDate>
                    <verbose>true</verbose>
                    <watchInterval>500</watchInterval>
                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <images>
                        <image>
                            <alias>embedded-test-mysql</alias>
                            <name>mysql:5.6</name>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <wait>
                                    <log>MySQL init process done. Ready for start up.</log>
                                    <time>30000</time>
                                </wait>
                                <env>
                                    <MYSQL_ROOT_PASSWORD>sis-embedded</MYSQL_ROOT_PASSWORD>
                                    <MYSQL_DATABASE>${db.schema}</MYSQL_DATABASE>
                                    <MYSQL_USER>${test-database.user}</MYSQL_USER>
                                    <MYSQL_PASSWORD>${test-database.password}</MYSQL_PASSWORD>
                                </env>
                                <ports>
                                    <port>${test-database.port}:3306</port>
                                </ports>
                                <log>
                                    <prefix>[mysql]</prefix>
                                    <enabled>true</enabled>
                                    <color>yellow</color>
                                </log>
                                <cmd>
                                    <shell>--character-set-server=utf8 --collation-server=utf8_general_ci</shell>
                                </cmd>
                            </run>
                        </image>
                        <image>
                            <alias>embedded-test-zk</alias>
                            <name>debezium/zookeeper:0.7</name>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <wait>
                                    <log>Zk init process done.</log>
                                    <time>60000</time>
                                </wait>
                                <log>
                                    <prefix>[Zookeeper]</prefix>
                                    <enabled>false</enabled>
                                    <color>yellow</color>
                                </log>
                                <ports>
                                    <port>2181:2181</port>
                                    <port>2888:2888</port>
                                    <port>3888:3888</port>
                                </ports>
                            </run>
                        </image>
                        <image>
                            <alias>embedded-test-kafka</alias>
                            <name>debezium/kafka:0.7</name>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <wait>
                                    <log>Kafka init process done.</log>
                                    <time>50000</time>
                                </wait>
                                <log>
                                    <prefix>[kafka]</prefix>
                                    <enabled>true</enabled>
                                    <color>yellow</color>
                                </log>
                                <links>
                                    <link>embedded-test-zk:embedded-test-zk</link>
                                </links>
                                <env>
                                    <KAFKA_ADVERTISED_HOST_NAME>127.0.0.1</KAFKA_ADVERTISED_HOST_NAME>
                                    <ZOOKEEPER_CONNECT>embedded-test-zk:2181</ZOOKEEPER_CONNECT>
                                </env>
                                <ports>
                                    <port>9092:9092</port>
                                </ports>
                            </run>
                        </image>
                        <image>
                            <alias>embedded-test-schema-registry</alias>
                            <name>confluentinc/cp-schema-registry:4.0.0</name>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <wait>
                                    <log>Schema-registry init process done.</log>
                                    <time>30000</time>
                                </wait>
                                <links>
                                    <link>embedded-test-zk:embedded-test-zk</link>
                                </links>
                                <log>
                                    <prefix>[schema registry]</prefix>
                                    <enabled>true</enabled>
                                    <color>yellow</color>
                                </log>
                                <env>
                                    <SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL>embedded-test-zk:2181</SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL>
                                    <SCHEMA_REGISTRY_LISTENERS>http://0.0.0.0:80</SCHEMA_REGISTRY_LISTENERS>
                                </env>
                                <ports>
                                    <port>80:80</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>migrate</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipIT}</skip>
                    <url>jdbc:mysql://localhost:${test-database.port}?useSSL=false</url>
                    <user>${test-database.user}</user>
                    <password>${test-database.password}</password>
                    <schemas>
                        <schema>${db.schema}</schema>
                    </schemas>
                    <locations>
                        <location>filesystem:src/test/resources/db/migration</location>
                        <location>classpath:db/migration</location>
                    </locations>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>sleep-for-a-while</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target>
                                <sleep seconds="10"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipMysqlSetup}</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipIT}</skipTests>
                    <enableAssertions>true</enableAssertions>
                    <systemPropertyVariables>
                        <database.hostname>${docker.host.address}</database.hostname>
                        <spring.datasource.url>
                            jdbc:mysql://${docker.host.address}:${test-database.port}/${db.schema}?useSSL=false
                        </spring.datasource.url>
                        <spring.datasource.username>${test-database.user}</spring.datasource.username>
                        <spring.datasource.password>${test-database.password}</spring.datasource.password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>